/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jtoko.anto.pasok;

import java.awt.Color;
import java.sql.Date;
import java.sql.SQLException;
import java.sql.Time;
import java.time.LocalDate;
import java.time.LocalTime;
import jtoko.anto.Db;
import jtoko.anto.tools.Deleter;

/**
 *
 * @author ashura
 */
public abstract class Add extends javax.swing.JDialog {

    public abstract void reload();
    private java.awt.Frame p;
    /**
     * Creates new form Add
     */
    public Add(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        p = parent;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sup = new javax.swing.JComboBox<>();
        nama = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        almt = new javax.swing.JTextArea();
        telp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tgl = new javax.swing.JFormattedTextField();
        n = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tambah Pasokan Baru");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Pilih Suplier :");

        jLabel2.setText("Nama :");

        jLabel3.setText("Alamat :");

        sup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Satu :" }));
        sup.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                supItemStateChanged(evt);
            }
        });

        nama.setEditable(false);

        almt.setEditable(false);
        almt.setColumns(20);
        almt.setRows(5);
        jScrollPane1.setViewportView(almt);

        telp.setEditable(false);

        jLabel4.setText("No. Telp :");

        jLabel5.setText("Tanggal :");

        tgl.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        tgl.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tgl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tglKeyReleased(evt);
            }
        });

        n.setText("Next");
        n.setEnabled(false);
        n.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(telp)
                            .addComponent(jScrollPane1)
                            .addComponent(nama)
                            .addComponent(sup, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tgl))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(n, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(n)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new Thread(this::reload).start();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        stun();
        new Thread(this::muatSek).start();
    }//GEN-LAST:event_formWindowOpened

    private void supItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_supItemStateChanged
        stun();
        new Thread(this::muatSup).start();
    }//GEN-LAST:event_supItemStateChanged

    private void tglKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tglKeyReleased
        if (!"".equals(tgl.getText())) {
            if (Deleter.isDateValid(tgl)) tgl.setForeground(Color.BLACK);
            else tgl.setForeground(Color.red);
        } refresh();
    }//GEN-LAST:event_tglKeyReleased

    private void nActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nActionPerformed
        stun();
        new Thread(this::lanjut).start();
    }//GEN-LAST:event_nActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea almt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton n;
    private javax.swing.JTextField nama;
    private javax.swing.JComboBox<String> sup;
    private javax.swing.JTextField telp;
    private javax.swing.JFormattedTextField tgl;
    // End of variables declaration//GEN-END:variables

    private void stun() {
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        n.setEnabled(false);
        sup.setEnabled(false);
        tgl.setEnabled(false);
    }

    private void muatSek() {
        var t = Date.valueOf(LocalDate.now()); try {
            Db d = new Db();
            var r = d.hasil("select kode from suplier where not hapus order by kode");
            while (r.next()) sup.addItem(r.getString("kode"));
            r.close();
            d.close();
        } catch (SQLException ex) {
            Db.hindar(ex);
        } tgl.setText("" + t);
        sup.setSelectedIndex(0);
        purify();
    }

    private void purify() {
        sup.setEnabled(true);
        tgl.setEnabled(true);
        refresh();
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }

    private void refresh() {
        n.setEnabled(0 < sup.getSelectedIndex() && !"".equals(tgl.getText()));
        if (n.isEnabled()) n.setEnabled(Deleter.isDateValid(tgl));
    }

    private void muatSup() {
        if (0 < sup.getSelectedIndex()) try {
            Db d = new Db();
            var p = d.prep("select nama,almt,tlp from suplier where kode=? and not hapus");
            p.setString(1, sup.getItemAt(sup.getSelectedIndex()));
            var r = p.executeQuery();
            if (r.next()) {
                nama.setText(r.getString("nama"));
                almt.setText(r.getString("almt"));
                telp.setText(r.getString("tlp"));
            } r.close();
            p.close();
            d.close();
        } catch (SQLException ex) {
            Db.hindar(ex);
        } else {
            nama.setText("");
            almt.setText("");
            telp.setText("");
        } purify();
    }

    private void lanjut() {
        var t = Time.valueOf(LocalTime.now()); try {
            Db d = new Db();
            String kode = genKode(d);
            var p = d.prep("insert into pasok values(?,?,?,?,0,'Tunai',?)");
            p.setString(1, kode);
            p.setDate(2, Date.valueOf(tgl.getText()));
            p.setTime(3, t);
            p.setString(4, sup.getItemAt(sup.getSelectedIndex()));
            p.setBoolean(5, false);
            p.execute();
            p.close();
            d.close();
            pindah(kode);
        } catch (SQLException ex) {
            purify();
            Db.hindar(ex);
        }
    }

    private String genKode(Db d) throws SQLException {
        var t = Date.valueOf(tgl.getText());
        String s = sup.getItemAt(sup.getSelectedIndex()) + 'a' + t.getTime();
        var p = d.prep("select count(kode)as akeh from pasok where tgl=?");
        p.setDate(1, t);
        var r = p.executeQuery();
        if (r.next()) s += 'b' + r.getString("akeh");
        r.close();
        p.close();
        return s;
    }

    private void pindah(String kode) {
        var i = new jtoko.anto.pasok.Items(p, false, kode) {
            @Override
            public void reload1() {
                reload();
            }
        }; i.setVisible(true);
        setVisible(false);
    }
}
