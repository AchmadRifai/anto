/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jtoko.anto.jual;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import jtoko.anto.Db;
import jtoko.anto.tools.Deleter;
import jtoko.anto.tools.Loader;

/**
 *
 * @author ashura
 */
public abstract class Add2 extends javax.swing.JDialog {
    private String nota, sBrg;

    public abstract void reload1();
    /**
     * Creates new form Add2
     */
    public Add2(java.awt.Frame parent, boolean modal, String nota) {
        super(parent, modal);
        this.nota = nota;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        srcBrg = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBrg = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jumJual = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemJu = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Item Penjualan");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Barang"));

        jLabel1.setText("Cari Barang");

        srcBrg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srcBrgKeyReleased(evt);
            }
        });

        tblBrg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Nama", "Stok", "Harga"
            }
        ));
        tblBrg.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblBrg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBrgMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBrg);

        jLabel2.setText("Jumlah Beli");

        jumJual.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jumJual.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jumJual.setText("0");
        jumJual.setEnabled(false);
        jumJual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jumJualKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(srcBrg, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jumJual, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(srcBrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jumJual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        itemJu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barang", "Jumlah", "Hrg Satuan", "Sub Total"
            }
        ));
        jScrollPane2.setViewportView(itemJu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int s = JOptionPane.showConfirmDialog(rootPane, "Apa anda ingin menunda penjualan ini?", "Tunda?", JOptionPane.YES_NO_OPTION);
        if (s != JOptionPane.YES_OPTION) new Thread(this::hapusNota).start();
        else new Thread(this::reload1).start();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        setTitle("Item Penjualan " + nota);
        new Thread(this::muatBrg).start();
    }//GEN-LAST:event_formWindowOpened

    private void tblBrgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBrgMouseClicked
        int s = tblBrg.getSelectedRow();
        if (tblBrg.isRowSelected(s)) {
            sBrg = "" + tblBrg.getValueAt(s, 0);
            new Thread(this::bukaBrg).start();
        }
    }//GEN-LAST:event_tblBrgMouseClicked

    private void srcBrgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srcBrgKeyReleased
        srcBrg.setEnabled(false);
        if ("".equals(srcBrg.getText())) new Thread(this::muatBrg).start();
        else new Thread(this::cariBrg).start();
    }//GEN-LAST:event_srcBrgKeyReleased

    private void jumJualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jumJualKeyReleased
        if (Deleter.isDoubleValid(jumJual) && evt.getKeyCode() != KeyEvent.VK_LEFT && evt.getKeyCode() != KeyEvent.VK_RIGHT
                && !evt.isShiftDown() && !evt.isControlDown()) {
            jumJual.setEnabled(false);
            new Thread(this::tmpJumJual).start();
        }
    }//GEN-LAST:event_jumJualKeyReleased

    private void hapusNota() {
        try {
            Db d = new Db();
            java.sql.PreparedStatement p = d.prep("delete from jual where nota=?"), 
                    p2 = d.prep("delete from item_ju where nota=?");
            p2.setString(1, nota);
            p2.execute();
            p.setString(1, nota);
            p2.close();
            p.execute();
            p.close();
            d.close();
        } catch (SQLException ex) {
            Db.hindar(ex);
        } reload1();
    }

    private void muatBrg() {
        var m = new javax.swing.table.DefaultTableModel(new String[]{"Kode", "Nama", "Harga", "Stok"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        }; tblBrg.setModel(m);
        try {
            Db d = new Db();
            java.sql.ResultSet r = d.hasil("select kode,nm,jual,stok,sat from barang where not hapus and stok>0");
            while (r.next()) m.addRow(new String[]{r.getString("kode"), r.getString("nm"), r.getString("jual"), r.getString("stok") +
            ' ' + r.getString("sat")});
            r.close();
            d.close();
        } catch (SQLException ex) {
            Db.hindar(ex);
        } setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sBrg = null;
        srcBrg.setEnabled(true);
        srcBrg.setText("");
        jumJual.setEnabled(false);
        jumJual.setText("0");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable itemJu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JFormattedTextField jumJual;
    private javax.swing.JTextField srcBrg;
    private javax.swing.JTable tblBrg;
    // End of variables declaration//GEN-END:variables

    private void cariBrg() {
        var m = new javax.swing.table.DefaultTableModel(new String[]{"Kode", "Nama", "Harga", "Stok"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        }; tblBrg.setModel(m);
        try {
            Db d = new Db();
            java.sql.PreparedStatement p = d.prep("select kode,nm,jual,stok,sat from barang where not hapus and stok>0 and "
                    + "nm like ?");
            p.setString(1, "%" + srcBrg.getText() + '%');
            java.sql.ResultSet r = p.executeQuery();
            while (r.next()) m.addRow(new String[]{r.getString("kode"), r.getString("nm"), r.getString("jual"), r.getNString("stok") +
            ' ' + r.getString("sat")});
            r.close();
            p.close();
            d.close();
        } catch (SQLException ex) {
            Db.hindar(ex);
        } setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sBrg = null;
        jumJual.setEnabled(false);
        srcBrg.setEnabled(true);
        jumJual.setText("0");
    }

    private void tmpJumJual() {
        try {
            Db d = new Db();
            var p = d.prep("select jum from item_ju where nota=? and brg=?");
            p.setString(1, nota);
            p.setString(2, sBrg);
            var r = p.executeQuery();
            if (r.next()) {
                double hrg = Loader.hrgBrg(d, sBrg);
                d.exec("update item_ju set jum=" + jumJual.getText() + ",tot=" + (hrg * Double.parseDouble(jumJual.getText())) + " "
                        + "where nota='" + nota + "' and brg='" + sBrg + "'");
            } else {
                double hrg = Loader.hrgBrg(d, sBrg);
                d.exec("insert into item_ju values('" + nota + "','" + sBrg + "'," + Double.parseDouble(jumJual.getText()) + 
                        "," + hrg + "," + (hrg * Double.parseDouble(jumJual.getText())) + ")");
            } r.close();
            p.close();
            d.close();
        } catch (SQLException ex) {
            Db.hindar(ex);
        } jumJual.setEnabled(true);
        jumJual.setFocusable(true);
        muatItem();
    }

    private void muatItem() {
        try {
            Db d = new Db();
            var m = new javax.swing.table.DefaultTableModel(new String[]{"Barang", "Jumlah", "Hrg Satuan", "Subtotal"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            } }; itemJu.setModel(m);
            java.sql.PreparedStatement p = d.prep("select brg,jum,sat,tot from item_ju where nota=?");
            p.setString(1, nota);
            java.sql.ResultSet r = p.executeQuery();
            while (r.next()) m.addRow(new String[]{r.getString("brg"), r.getString("jum"), r.getString("sat"), r.getString("tot")});
            r.close();
            p.close();
            d.close();
        } catch (SQLException ex) {
            Db.hindar(ex);
        }
    }

    private void bukaBrg() {
        try {
            Db d = new Db();
            int i = 0;
            java.sql.PreparedStatement p = d.prep("select jum from item_ju where nota=? and brg=?");
            p.setString(1, nota);
            p.setString(2, sBrg);
            java.sql.ResultSet r = p.executeQuery();
            if (r.next()) i = r.getInt("jum");
            r.close();
            p.close();
            d.close();
            jumJual.setText("" + i);
            jumJual.setEnabled(true);
        } catch (SQLException ex) {
            Db.hindar(ex);
        }
    }
}
